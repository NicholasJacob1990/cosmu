# Generated by Django 5.2.4 on 2025-08-02 00:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0004_multi_kyc_providers"),
    ]

    operations = [
        migrations.CreateModel(
            name="BadgeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("verification", "Verificação"),
                            ("performance", "Performance"),
                            ("engagement", "Engajamento"),
                            ("expertise", "Expertise"),
                            ("milestone", "Marco"),
                            ("special", "Especial"),
                            ("seasonal", "Sazonal"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Comum"),
                            ("uncommon", "Incomum"),
                            ("rare", "Raro"),
                            ("epic", "Épico"),
                            ("legendary", "Lendário"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                (
                    "icon",
                    models.CharField(help_text="Emoji ou nome do ícone", max_length=50),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6366f1", help_text="Cor hex do badge", max_length=7
                    ),
                ),
                (
                    "requirements",
                    models.JSONField(
                        default=dict,
                        help_text="Critérios específicos para obter o badge",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_stackable",
                    models.BooleanField(
                        default=False, help_text="Pode ser obtido múltiplas vezes"
                    ),
                ),
                (
                    "max_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Máximo de vezes que pode ser obtido (se stackable)",
                        null=True,
                    ),
                ),
                (
                    "xp_reward",
                    models.PositiveIntegerField(
                        default=0, help_text="XP ganho ao obter"
                    ),
                ),
                (
                    "boost_multiplier",
                    models.FloatField(
                        default=1.0, help_text="Multiplicador de boost (ex: 1.1 = +10%)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["category", "rarity", "name"],
            },
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("milestone", "Marco"),
                            ("challenge", "Desafio"),
                            ("seasonal", "Sazonal"),
                            ("special", "Especial"),
                        ],
                        max_length=20,
                    ),
                ),
                ("icon", models.CharField(max_length=50)),
                ("color", models.CharField(default="#fbbf24", max_length=7)),
                ("requirements", models.JSONField(default=dict)),
                ("xp_reward", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "badge_reward",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.badgetype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_level",
                    models.CharField(
                        choices=[
                            ("basic", "Cadastro Básico"),
                            ("verified", "Identidade Verificada"),
                            ("professional", "Profissional Verificado"),
                            ("expert", "Especialista"),
                            ("elite", "GalaxIA Elite"),
                            ("legend", "Lenda"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                ("total_xp", models.PositiveIntegerField(default=0)),
                ("current_level_xp", models.PositiveIntegerField(default=0)),
                ("xp_to_next_level", models.PositiveIntegerField(default=100)),
                ("projects_completed", models.PositiveIntegerField(default=0)),
                ("services_delivered", models.PositiveIntegerField(default=0)),
                (
                    "total_earnings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("average_rating", models.FloatField(default=0.0)),
                ("completion_rate", models.FloatField(default=0.0)),
                ("response_time_hours", models.FloatField(default=24.0)),
                ("active_streak_days", models.PositiveIntegerField(default=0)),
                ("max_streak_days", models.PositiveIntegerField(default=0)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("kyc_verified", models.BooleanField(default=False)),
                ("email_verified", models.BooleanField(default=False)),
                ("phone_verified", models.BooleanField(default=False)),
                ("professional_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="level",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-total_xp"],
            },
        ),
        migrations.CreateModel(
            name="XPActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("project_completed", "Projeto Concluído"),
                            ("service_delivered", "Serviço Entregue"),
                            ("rating_received", "Avaliação Recebida"),
                            ("kyc_verified", "Verificação KYC"),
                            ("profile_completed", "Perfil Completo"),
                            ("first_service", "Primeiro Serviço"),
                            ("streak_bonus", "Bônus de Sequência"),
                            ("badge_earned", "Badge Conquistado"),
                            ("referral", "Indicação"),
                            ("manual", "Manual"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=200)),
                ("total_xp_before", models.PositiveIntegerField(default=0)),
                ("total_xp_after", models.PositiveIntegerField()),
                ("related_object_type", models.CharField(blank=True, max_length=50)),
                ("related_object_id", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xp_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                ("progress_data", models.JSONField(default=dict)),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
                "unique_together": {("user", "achievement")},
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "earned_for",
                    models.CharField(
                        blank=True,
                        help_text="Descrição do que o usuário fez para ganhar",
                        max_length=200,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=1)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Dados específicos da conquista"
                    ),
                ),
                (
                    "badge_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.badgetype"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
                "unique_together": {("user", "badge_type")},
            },
        ),
    ]
