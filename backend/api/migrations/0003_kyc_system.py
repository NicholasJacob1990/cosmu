# Generated by Django 5.2.4 on 2025-08-01 23:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0002_add_onboarding_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="VerificationProvider",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("api_endpoint", models.URLField()),
                (
                    "api_key_field",
                    models.CharField(
                        help_text="Nome do campo da API key", max_length=100
                    ),
                ),
                ("supports_documents", models.BooleanField(default=True)),
                ("supports_biometric", models.BooleanField(default=True)),
                ("supports_address", models.BooleanField(default=True)),
                ("supports_brazil", models.BooleanField(default=True)),
                (
                    "cost_per_verification",
                    models.DecimalField(
                        decimal_places=4, help_text="Custo em USD", max_digits=10
                    ),
                ),
                (
                    "monthly_limit",
                    models.PositiveIntegerField(
                        blank=True, help_text="Limite mensal de verificações", null=True
                    ),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configurações específicas do provedor",
                    ),
                ),
                ("total_verifications", models.PositiveIntegerField(default=0)),
                (
                    "success_rate",
                    models.FloatField(default=0.0, help_text="Taxa de sucesso (0-1)"),
                ),
                (
                    "average_response_time",
                    models.FloatField(
                        default=0.0, help_text="Tempo médio de resposta em segundos"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BiometricVerification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "selfie_url",
                    models.URLField(help_text="URL da selfie", max_length=1000),
                ),
                (
                    "liveness_video_url",
                    models.URLField(
                        blank=True,
                        help_text="URL do vídeo de liveness",
                        max_length=1000,
                    ),
                ),
                (
                    "liveness_score",
                    models.FloatField(default=0.0, help_text="Score de liveness (0-1)"),
                ),
                (
                    "face_match_score",
                    models.FloatField(
                        default=0.0, help_text="Score de match com documento (0-1)"
                    ),
                ),
                (
                    "quality_score",
                    models.FloatField(
                        default=0.0, help_text="Qualidade da imagem (0-1)"
                    ),
                ),
                (
                    "device_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Informações do dispositivo"
                    ),
                ),
                (
                    "geolocation",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Localização no momento da captura",
                    ),
                ),
                (
                    "timestamp_capture",
                    models.DateTimeField(help_text="Timestamp exato da captura"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("processing", "Processando"),
                            ("approved", "Aprovado"),
                            ("rejected", "Rejeitado"),
                            ("expired", "Expirado"),
                            ("manual_review", "Revisão Manual"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verification_provider", models.CharField(blank=True, max_length=50)),
                ("provider_response", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="biometric_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user"], name="api_biometr_user_id_aa6e21_idx"
                    ),
                    models.Index(
                        fields=["status"], name="api_biometr_status_81e58c_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="api_biometr_created_63e176_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="KYCDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("rg", "RG (Registro Geral)"),
                            ("cpf", "CPF"),
                            ("cnh", "CNH (Carteira Nacional de Habilitação)"),
                            ("passport", "Passaporte"),
                            ("cnpj", "CNPJ"),
                            ("proof_address", "Comprovante de Endereço"),
                            ("diploma", "Diploma"),
                            ("certificate", "Certificado Profissional"),
                            ("selfie_document", "Selfie com Documento"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "file_url",
                    models.URLField(
                        help_text="URL do arquivo no S3/storage", max_length=1000
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        help_text="Tamanho do arquivo em bytes"
                    ),
                ),
                (
                    "file_hash",
                    models.CharField(
                        help_text="Hash SHA-256 do arquivo", max_length=64
                    ),
                ),
                (
                    "ocr_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Dados extraídos via OCR"
                    ),
                ),
                (
                    "extracted_text",
                    models.TextField(blank=True, help_text="Texto completo extraído"),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="Score de confiança OCR (0-1)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("processing", "Processando"),
                            ("approved", "Aprovado"),
                            ("rejected", "Rejeitado"),
                            ("expired", "Expirado"),
                            ("manual_review", "Revisão Manual"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "verification_provider",
                    models.CharField(
                        blank=True, help_text="Provedor KYC usado", max_length=50
                    ),
                ),
                (
                    "provider_response",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Resposta completa do provedor",
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "rejection_reason",
                    models.TextField(blank=True, help_text="Motivo da rejeição"),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True, help_text="Notas internas para equipe"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kyc_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "document_type"],
                        name="api_kycdocu_user_id_3fcb03_idx",
                    ),
                    models.Index(
                        fields=["status"], name="api_kycdocu_status_622151_idx"
                    ),
                    models.Index(
                        fields=["uploaded_at"], name="api_kycdocu_uploade_b3ac34_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="KYCProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "current_level",
                    models.CharField(
                        choices=[
                            ("basic", "Cadastro Básico ⭐"),
                            ("identity_verified", "Identidade Verificada ⭐⭐"),
                            ("professional_verified", "Profissional Verificado ⭐⭐⭐"),
                            ("galaxia_elite", "GalaxIA Elite ⭐⭐⭐⭐⭐"),
                        ],
                        default="basic",
                        max_length=30,
                    ),
                ),
                ("identity_verified", models.BooleanField(default=False)),
                ("address_verified", models.BooleanField(default=False)),
                ("biometric_verified", models.BooleanField(default=False)),
                ("professional_verified", models.BooleanField(default=False)),
                ("verified_full_name", models.CharField(blank=True, max_length=200)),
                (
                    "verified_document_number",
                    models.CharField(blank=True, max_length=50),
                ),
                ("verified_birth_date", models.DateField(blank=True, null=True)),
                ("verified_address", models.TextField(blank=True)),
                (
                    "overall_trust_score",
                    models.FloatField(
                        default=0.0, help_text="Score geral de confiança (0-1)"
                    ),
                ),
                (
                    "identity_confidence",
                    models.FloatField(
                        default=0.0, help_text="Confiança na identidade (0-1)"
                    ),
                ),
                (
                    "document_confidence",
                    models.FloatField(
                        default=0.0, help_text="Confiança nos documentos (0-1)"
                    ),
                ),
                (
                    "biometric_confidence",
                    models.FloatField(
                        default=0.0, help_text="Confiança biométrica (0-1)"
                    ),
                ),
                ("first_verification_at", models.DateTimeField(blank=True, null=True)),
                ("last_verification_at", models.DateTimeField(blank=True, null=True)),
                ("verification_attempts", models.PositiveIntegerField(default=0)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Baixo"),
                            ("medium", "Médio"),
                            ("high", "Alto"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notas internas sobre o perfil"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kyc_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["current_level"], name="api_kycprof_current_1e030f_idx"
                    ),
                    models.Index(
                        fields=["identity_verified"],
                        name="api_kycprof_identit_868c78_idx",
                    ),
                    models.Index(
                        fields=["overall_trust_score"],
                        name="api_kycprof_overall_0fac37_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="VerificationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "verification_type",
                    models.CharField(
                        help_text="Tipo de verificação realizada", max_length=50
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(
                        default=dict, help_text="Dados enviados para o provedor"
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        default=dict, help_text="Resposta completa do provedor"
                    ),
                ),
                ("success", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                ("confidence_score", models.FloatField(default=0.0)),
                (
                    "response_time",
                    models.FloatField(help_text="Tempo de resposta em segundos"),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Custo desta verificação",
                        max_digits=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.verificationprovider",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user"], name="api_verific_user_id_065c69_idx"
                    ),
                    models.Index(
                        fields=["provider"], name="api_verific_provide_285bde_idx"
                    ),
                    models.Index(
                        fields=["success"], name="api_verific_success_0c253e_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="api_verific_created_8eb1b0_idx"
                    ),
                ],
            },
        ),
    ]
